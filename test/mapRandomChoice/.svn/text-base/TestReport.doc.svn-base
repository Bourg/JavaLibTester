Show all data defined in the ExamplesMapRandomChoice class:


---------------------------------------------------
Invoke tester.runReport(this, true, true):
Print all data, all test results
Tester Prima v.1.4.1 - 5 October 2010
----------------------------------
mapRandomChoice.ExamplesMapRandomChoice:
---------------

 new mapRandomChoice.ExamplesMapRandomChoice:1(
  this.answers = 
   new mapRandomChoice.Reply:2(
    this.answers = 
     new java.util.ArrayList:3(){
      Iterable[0]  "Why do you want to know?",
      Iterable[1]  "Who cares?",
      Iterable[2]  "It does not matter."})
  this.who = 
   new mapRandomChoice.Reply:4(
    this.answers = 
     new java.util.ArrayList:5(){
      Iterable[0]  "Who cares?"})
  this.why = 
   new mapRandomChoice.Reply:6(
    this.answers = 
     new java.util.ArrayList:7(){
      Iterable[0]  "Why do you want to know?"})
  this.when = 
   new mapRandomChoice.Reply:8(
    this.answers = 
     new java.util.ArrayList:9(){
      Iterable[0]  "It does not matter."})
  this.replies = {when=mapRandomChoice.Reply@3f0ef90c, why=mapRandomChoice.Reply@2e471e30, who=mapRandomChoice.Reply@1b17a8bd}
   new java.util.HashMap:10(){
    (key:  "why"
     value: mapRandomChoice.Reply:6),
    (key:  "when"
     value: mapRandomChoice.Reply:8),
    (key:  "who"
     value: mapRandomChoice.Reply:4)}
  this.replies2 = {why=mapRandomChoice.Reply@2e471e30, who=mapRandomChoice.Reply@1b17a8bd}
   new java.util.HashMap:11(){
    (key:  "why"
     value: mapRandomChoice.Reply:6),
    (key:  "who"
     value: mapRandomChoice.Reply:4)})
---------------

Ran 11 tests.
4 tests failed.
Issued 4 warnings of inexact comparison.

Full test results: 
-------------------

Success in the test number 1

: success 


Success in the test number 2
Successs: checkOneOf
actual:                                 expected:
 "Who cares?"                            "Who cares?"



Error in test number 3
Should fail: checkOneOf
No matching value found among the list of expected values
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:60)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:226)
actual:    "HI"
expected: 

 new Object[3](){
  [0]  "Why do you want to know?",
  [1]  "Who cares?",
  [2]  "It does not matter."}


Success in the test number 4
Success: checkNoneOf
No matching value found among the list of excluded values
actual:    "HI"
expected: 

 new Object[3](){
  [0]  "Why do you want to know?",
  [1]  "Who cares?",
  [2]  "It does not matter."}


Error in test number 5
Matching value found in none-of test
Should fail: checkNoneOf
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:71)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:226)
actual:                                 expected:
 "Who cares?"                            "Who cares?"



Success in the test number 6
Success: checkInexactOneOf
The comparison involved inexact numbers with relative tolerance 0.01
actual:                                 expected:
3.001...................................3.0



Error in test number 7
Should fail: checkInexactOneOf
No matching value found among the list of expected values
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:83)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:226)
The comparison involved inexact numbers with relative tolerance 0.01
actual:   3.001
expected: 

 new Object[3](){
  [0] 3.333,
  [1] 3.5,
  [2] 2.666}


Success in the test number 8
Success: checkInexactNoneOf
No matching value found among the list of excluded values
The comparison involved inexact numbers with relative tolerance 0.01
actual:   3.001
expected: 

 new Object[3](){
  [0] 3.333,
  [1] 3.5,
  [2] 2.666}


Error in test number 9
Matching value found in none-of test
Should fail: checkInexactNoneOf
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:96)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:226)
The comparison involved inexact numbers with relative tolerance 0.01
actual:                                 expected:
3.001...................................3.0



Success in the test number 10
Success
actual:                                 expected:

--  actual  : {when=mapRandomChoice.Reply@3f0ef90c, why=mapRandomChoice.Reply@2e471e30, who=mapRandomChoice.Reply@1b17a8bd}..........

--  expected: {who=mapRandomChoice.Reply@1b17a8bd, when=mapRandomChoice.Reply@3f0ef90c, why=mapRandomChoice.Reply@2e471e30}

 new java.util.HashMap:1(){              new java.util.HashMap:1(){
  (key:  "why"                            (key:  "why"
   value:                                  value: 
   new mapRandomChoice.Reply:2(            new mapRandomChoice.Reply:2(
    this.answers =                          this.answers = 
     new java.util.ArrayList:3(){            new java.util.ArrayList:3(){

--  actual  :       Iterable[0]  "Why do you want to know?"})),          

--  expected:       Iterable[0]  "Why do you want to know?"})),

  (key:  "when"                           (key:  "when"
   value:                                  value: 
   new mapRandomChoice.Reply:4(            new mapRandomChoice.Reply:4(
    this.answers =                          this.answers = 
     new java.util.ArrayList:5(){            new java.util.ArrayList:5(){

--  actual  :       Iterable[0]  "It does not matter."})),          

--  expected:       Iterable[0]  "It does not matter."})),

  (key:  "who"                            (key:  "who"
   value:                                  value: 
   new mapRandomChoice.Reply:6(            new mapRandomChoice.Reply:6(
    this.answers =                          this.answers = 
     new java.util.ArrayList:7(){            new java.util.ArrayList:7(){
      Iterable[0]  "Who cares?"}))}           Iterable[0]  "Who cares?"}))}



Success in the test number 11
Failure expected: 
Test to fail
actual:                                 expected:

--  actual  : {when=mapRandomChoice.Reply@3f0ef90c, why=mapRandomChoice.Reply@2e471e30, who=mapRandomChoice.Reply@1b17a8bd}..........

--  expected: {who=mapRandomChoice.Reply@1b17a8bd, why=mapRandomChoice.Reply@2e471e30}

 new java.util.HashMap:1(){              new java.util.HashMap:1(){
  (key:  "why"                            (key:  "why"
   value:                                  value: 
   new mapRandomChoice.Reply:2(            new mapRandomChoice.Reply:2(
    this.answers =                          this.answers = 
     new java.util.ArrayList:3(){            new java.util.ArrayList:3(){

--  actual  :       Iterable[0]  "Why do you want to know?"})),          

--  expected:       Iterable[0]  "Why do you want to know?"})),

  (key:  "when"                           (key:  "who"
   value:                                  value: 
   new mapRandomChoice.Reply:4(            new mapRandomChoice.Reply:4(
    this.answers =                          this.answers = 
     new java.util.ArrayList:5(){            new java.util.ArrayList:5(){

--  actual  :       Iterable[0]  "It does not matter."})),          

--  expected:       Iterable[0]  "Who cares?"}))}

  (key:  "who"
   value: 
   new mapRandomChoice.Reply:6(
    this.answers = 
     new java.util.ArrayList:7(){
      Iterable[0]  "Who cares?"}))}



--- END OF FULL TEST RESULTS ---

---------------------------------------------------

---------------------------------------------------

---------------------------------------------------
Invoke tester.runReport(this, false, false, true):
Print no data, all test results, no warnings
Tester Prima v.1.4.1 - 5 October 2010
----------------------------------

Ran 11 tests.
4 tests failed.
Issued 4 warnings of inexact comparison.

Failed test results: 
--------------

Error in test number 3
Should fail: checkOneOf
No matching value found among the list of expected values
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:60)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:234)
actual:    "HI"
expected: 

 new Object[3](){
  [0]  "Why do you want to know?",
  [1]  "Who cares?",
  [2]  "It does not matter."}


Error in test number 5
Matching value found in none-of test
Should fail: checkNoneOf
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:71)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:234)
actual:                                 expected:
 "Who cares?"                            "Who cares?"



Error in test number 7
Should fail: checkInexactOneOf
No matching value found among the list of expected values
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:83)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:234)
The comparison involved inexact numbers with relative tolerance 0.01
actual:   3.001
expected: 

 new Object[3](){
  [0] 3.333,
  [1] 3.5,
  [2] 2.666}


Error in test number 9
Matching value found in none-of test
Should fail: checkInexactNoneOf
tester.ErrorReport: Error trace:
	at mapRandomChoice.ExamplesMapRandomChoice.testReply(ExamplesMapRandomChoice.java:96)
	at mapRandomChoice.ExamplesMapRandomChoice.main(ExamplesMapRandomChoice.java:234)
The comparison involved inexact numbers with relative tolerance 0.01
actual:                                 expected:
3.001...................................3.0



--- END OF TEST RESULTS ---
